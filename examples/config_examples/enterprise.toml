# SentinelEdge Enterprise Configuration
# Enterprise production environment configuration

[enterprise]
license_key = "${SENTINEL_ENTERPRISE_LICENSE}"
organization_id = "corp-12345"
deployment_id = "prod-us-east-1"
support_contact = "security-ops@company.com"

[ai]
provider = "openai"  # openai, claude, azure-openai, local
api_key = "${OPENAI_API_KEY}"
model = "gpt-4-turbo"
endpoint = "https://api.openai.com"
timeout = 30
retry_attempts = 3
rate_limit_per_minute = 100
backup_provider = "local"  # Fallback when primary service unavailable

[response]
log_file = "/var/log/sentinel-edge/security.log"
webhook_url = "https://siem.company.com/webhook/sentinel-edge"
enable_quarantine = true
enable_process_kill = false  # Production safety consideration
enable_network_block = true
alert_threshold = 0.6
block_threshold = 0.8
quarantine_threshold = 0.9

# Dynamic rule management - Enterprise core feature
[rule_management]
enabled = true
central_server = "https://rules.company.com"
api_key = "${SENTINEL_RULES_API_KEY}"
sync_interval_sec = 300  # 5 minute sync interval
enable_auto_sync = true
signature_verification = true
backup_rules_path = "/var/lib/sentinel-edge/rules-backup.json"
emergency_rules_path = "/etc/sentinel-edge/emergency-rules.json"

[monitoring]
monitor_network = true
monitor_processes = true
monitor_files = true
monitor_registry = true  # Windows registry
monitor_kernel_modules = true
monitor_containers = true

# High-precision monitoring paths
sensitive_paths = [
    # System critical files
    "/etc/passwd", "/etc/shadow", "/etc/sudoers",
    "/root/.ssh/*", "/home/*/.ssh/*",
    "/var/log/auth.log", "/var/log/secure",
    
    # Applications
    "/opt/app/config/*", "/var/www/html/*",
    "/etc/nginx/*", "/etc/apache2/*",
    
    # Databases
    "/var/lib/mysql/*", "/var/lib/postgresql/*",
    "/data/mongodb/*", "/opt/redis/*",
    
    # Containers and K8s
    "/var/lib/docker/*", "/etc/kubernetes/*",
    "/var/lib/kubelet/*", "/etc/containerd/*"
]

# Trusted processes - Reduce false positives
trusted_processes = [
    # System processes
    "systemd", "kthreadd", "ksoftirqd", "migration",
    "rcu_", "watchdog", "systemd-", "dbus-daemon",
    
    # Network and security
    "NetworkManager", "sshd", "chronyd", "rsyslog",
    
    # Container runtime
    "dockerd", "containerd", "kubelet", "kube-proxy",
    
    # Monitoring tools
    "prometheus", "grafana-server", "node_exporter",
    
    # Our own processes
    "sentinel-edge"
]

# Production environment performance optimization
[performance]
max_events_per_second = 10000
ring_buffer_size = "8MB"
ring_buffer_count = 4
event_batch_size = 500
worker_threads = 16
ai_request_timeout = 10
ai_batch_size = 50
ai_concurrent_requests = 8
memory_limit_mb = 2048

# High availability configuration
[high_availability]
enabled = true
cluster_nodes = [
    "sentinel-01.company.com:8443",
    "sentinel-02.company.com:8443", 
    "sentinel-03.company.com:8443"
]
leader_election = true
data_replication = true
health_check_interval = 30
failover_timeout = 60

# Enterprise security configuration
[security]
tls_enabled = true
cert_file = "/etc/sentinel-edge/tls/server.crt"
key_file = "/etc/sentinel-edge/tls/server.key"
ca_file = "/etc/sentinel-edge/tls/ca.crt"
client_auth_required = true
cipher_suites = ["TLS_AES_256_GCM_SHA384", "TLS_CHACHA20_POLY1305_SHA256"]
min_tls_version = "1.3"

# Audit and compliance
[compliance]
enable_audit_log = true
audit_log_path = "/var/log/sentinel-edge/audit.log"
frameworks = ["SOC2", "NIST_CSF", "ISO27001", "PCI_DSS", "PIPEDA"]
data_retention_days = 2555  # 7 year retention period
log_encryption = true
tamper_protection = true

# Enterprise integrations
[integrations]
# SIEM integration
splunk_hec_url = "https://splunk.company.com:8088/services/collector"
splunk_token = "${SPLUNK_HEC_TOKEN}"
splunk_index = "security"

# Log aggregation
elasticsearch_url = "https://elk.company.com:9200"
elasticsearch_index = "sentinel-edge-events"
elasticsearch_auth = "${ELASTIC_AUTH}"

# Message queue
kafka_brokers = ["kafka1:9092", "kafka2:9092", "kafka3:9092"]
kafka_topic = "security-events"
kafka_auth = "${KAFKA_SASL_AUTH}"

# Notification system
slack_webhook = "${SLACK_WEBHOOK_URL}"
slack_channel = "#security-alerts"
email_smtp_server = "smtp.company.com:587"
email_auth = "${EMAIL_AUTH}"
pagerduty_token = "${PAGERDUTY_TOKEN}"

# Microsoft Teams
teams_webhook = "${TEAMS_WEBHOOK_URL}"

# ServiceNow integration
servicenow_url = "https://company.service-now.com"
servicenow_auth = "${SERVICENOW_API_KEY}"

# Threat intelligence integration
[threat_intelligence]
enabled = true
sources = [
    {name = "VirusTotal", api_key = "${VT_API_KEY}"},
    {name = "AlienVault", api_key = "${AV_API_KEY}"},
    {name = "IBM_XForce", api_key = "${IBM_API_KEY}"},
    {name = "MISP", url = "https://misp.company.com", api_key = "${MISP_API_KEY}"}
]
cache_ttl_hours = 24
auto_enrichment = true

# Cloud security monitoring
[cloud_security]
enabled = true
aws_regions = ["us-east-1", "us-west-2", "eu-west-1"]
azure_subscriptions = ["${AZURE_SUB_1}", "${AZURE_SUB_2}"]
gcp_projects = ["${GCP_PROJECT_1}", "${GCP_PROJECT_2}"]
kubernetes_clusters = ["prod-cluster", "staging-cluster"]

# Container security
[container_security]
enabled = true
scan_images = true
scan_registries = ["docker.io", "gcr.io", "company-registry.com"]
runtime_protection = true
network_policies = true

# Network security monitoring
[network_security]
enabled = true
monitor_dns = true
detect_dga = true  # Domain Generation Algorithm
detect_beaconing = true
detect_lateral_movement = true
zeek_integration = true

# Endpoint protection
[endpoint_protection]
enabled = true
real_time_scanning = true
behavioral_analysis = true
machine_learning_detection = true
sandbox_integration = true

# Data protection
[data_protection]
enabled = true
classify_sensitive_data = true
dlp_rules = true  # Data Loss Prevention
encryption_monitoring = true
gdpr_compliance = true

# User behavior analytics
[user_behavior_analytics]
enabled = true
baseline_learning_days = 30
anomaly_threshold = 0.8
privileged_user_monitoring = true
insider_threat_detection = true

# API security
[api_security]
enabled = true
rate_limiting = true
jwt_validation = true
oauth_monitoring = true
graphql_protection = true

# DevSecOps integration
[devsecops]
enabled = true
ci_cd_integration = true
jenkins_webhook = "${JENKINS_WEBHOOK}"
gitlab_webhook = "${GITLAB_WEBHOOK}"
github_webhook = "${GITHUB_WEBHOOK}"
code_scanning = true

# Incident response automation
[incident_response]
enabled = true
playbooks_path = "/etc/sentinel-edge/playbooks/"
auto_containment = true
evidence_collection = true
forensic_imaging = true

# Business continuity
[business_continuity]
backup_enabled = true
backup_interval_hours = 6
backup_retention_days = 90
disaster_recovery_site = "dr.company.com"
rpo_minutes = 15  # Recovery Point Objective
rto_minutes = 30  # Recovery Time Objective

# Performance monitoring and alerting
[monitoring]
metrics_enabled = true
prometheus_endpoint = "0.0.0.0:9090"
grafana_dashboard = true
custom_metrics = true

health_checks = [
    {name = "ebpf_programs", interval = 30},
    {name = "rule_sync", interval = 300},
    {name = "ai_service", interval = 60},
    {name = "memory_usage", threshold = 80},
    {name = "cpu_usage", threshold = 70},
    {name = "disk_usage", threshold = 85}
]

# Licensing and support
[support]
license_server = "https://license.sentineledge.com"
telemetry_enabled = true  # Anonymous usage statistics
crash_reporting = true
auto_updates = false  # Manual control in enterprise environment
support_tunnel = true  # Remote diagnosis by support team

# Geographic distribution and localization
[localization]
timezone = "UTC"
language = "en_US"
currency = "USD"
data_residency = "US"  # Data sovereignty requirements
gdpr_region = false

[logging]
level = "info"
format = "json"  # Structured logging
rotate_size = "100MB"
rotate_count = 50
compress_rotated = true
remote_syslog = "syslog.company.com:514"

# Development and testing configuration
[development]
debug_mode = false
test_mode = false
mock_threats = false
performance_profiling = false
memory_profiling = false 