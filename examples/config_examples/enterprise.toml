# SentinelEdge Enterprise Configuration Example
# ðŸ“‹ CONCEPTUAL DESIGN - This configuration demonstrates enterprise-grade 
# architecture concepts for educational purposes

[enterprise]
organization_id = "your-organization"
deployment_id = "production-cluster"
support_contact = "security-ops@company.com"

[monitoring]
monitor_network = true
monitor_processes = true
monitor_files = true
monitor_kernel_modules = true

# High-precision monitoring paths
sensitive_paths = [
    # System critical files
    "/etc/passwd", "/etc/shadow", "/etc/sudoers",
    "/root/.ssh/*", "/home/*/.ssh/*",
    "/var/log/auth.log", "/var/log/secure",
    
    # Applications
    "/opt/app/config/*", "/var/www/html/*",
    "/etc/nginx/*", "/etc/apache2/*",
    
    # Databases
    "/var/lib/mysql/*", "/var/lib/postgresql/*",
    
    # Containers
    "/var/lib/docker/*", "/etc/kubernetes/*"
]

# Trusted processes - Reduce false positives
trusted_processes = [
    # System processes
    "systemd", "kthreadd", "ksoftirqd", "migration",
    "rcu_", "watchdog", "systemd-", "dbus-daemon",
    
    # Network and security
    "NetworkManager", "sshd", "chronyd", "rsyslog",
    
    # Container runtime
    "dockerd", "containerd", "kubelet", "kube-proxy",
    
    # Our own processes
    "sentinel-edge"
]

[threat_detection]
provider = "rule_engine"  # Only rule-based detection is implemented
enable_heuristics = true
confidence_threshold = 0.7
alert_threshold = 0.6
block_threshold = 0.8

[response]
log_file = "/var/log/sentinel-edge/security.log"
webhook_url = "https://your-siem.company.com/webhook/sentinel-edge"
enable_alerts = true
enable_quarantine = false  # Conceptual feature
enable_process_kill = false  # Safety consideration
log_level = "info"

# Performance optimization for production
[performance]
max_events_per_second = 5000
ring_buffer_size = "4MB"
ring_buffer_count = 2
event_batch_size = 100
worker_threads = 8
memory_limit_mb = 1024

# ðŸ“‹ CONCEPTUAL: High availability configuration
[high_availability]
enabled = false  # Conceptual design
cluster_nodes = [
    "sentinel-01.company.com:8443",
    "sentinel-02.company.com:8443", 
    "sentinel-03.company.com:8443"
]
leader_election = false  # Not implemented
data_replication = false  # Not implemented

# Security configuration
[security]
tls_enabled = true
cert_file = "/etc/sentinel-edge/tls/server.crt"
key_file = "/etc/sentinel-edge/tls/server.key"
ca_file = "/etc/sentinel-edge/tls/ca.crt"
min_tls_version = "1.3"

# Audit and compliance
[compliance]
enable_audit_log = true
audit_log_path = "/var/log/sentinel-edge/audit.log"
data_retention_days = 90
log_encryption = false  # Conceptual feature

# ðŸ“‹ CONCEPTUAL: Enterprise integrations
[integrations]
# SIEM integration concepts
splunk_hec_url = "https://splunk.company.com:8088/services/collector"
splunk_token = "${SPLUNK_HEC_TOKEN}"
splunk_index = "security"

# Log aggregation concepts
elasticsearch_url = "https://elk.company.com:9200"
elasticsearch_index = "sentinel-edge-events"
elasticsearch_auth = "${ELASTIC_AUTH}"

# Notification system concepts
slack_webhook = "${SLACK_WEBHOOK_URL}"
slack_channel = "#security-alerts"
email_smtp_server = "smtp.company.com:587"
email_auth = "${EMAIL_AUTH}"

# Note: The above integrations are conceptual designs demonstrating
# enterprise architecture patterns. Only basic logging and rule-based
# detection are currently implemented. 