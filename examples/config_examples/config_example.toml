# SentinelEdge Configuration Example
# This configuration demonstrates both basic and advanced deployment concepts
# ðŸ“‹ Features marked as "CONCEPTUAL" are architectural designs for educational purposes

[monitoring]
monitor_network = true
monitor_processes = true
monitor_files = true

# Sensitive paths to monitor closely
sensitive_paths = [
    # System critical files
    "/etc/passwd", "/etc/shadow", "/etc/sudoers",
    "/root/.ssh", "/home/*/.ssh",
    "/var/log/auth.log", "/etc/crontab",
    "/etc/systemd", "/usr/bin/sudo", "/bin/su",
    
    # Application paths (add your own)
    "/opt/app/config/*", "/var/www/html/*",
    "/etc/nginx/*", "/var/lib/docker/*"
]

# Trusted processes (reduce false positives)
trusted_processes = [
    # System processes
    "systemd", "kthreadd", "ksoftirqd", "rcu_",
    "watchdog", "systemd-", "dbus", "NetworkManager",
    "chronyd", "sentinel-edge"
]

[threat_detection]
provider = "rule_engine"  # âœ… IMPLEMENTED: Only rule-based detection
enable_heuristics = true
confidence_threshold = 0.7
alert_threshold = 0.6

[response]
log_file = "/var/log/sentinel-edge/security.log"
webhook_url = "https://your-siem.company.com/webhook/sentinel-edge"
enable_alerts = true
enable_quarantine = false  # ðŸ“‹ CONCEPTUAL: Not implemented
enable_process_kill = false  # Safety consideration
log_level = "info"

# Performance settings
[performance]
max_events_per_second = 5000
ring_buffer_size = "2MB"
event_batch_size = 100
worker_threads = 4
memory_limit_mb = 512

# ðŸ“‹ CONCEPTUAL: High availability (architectural concept)
[high_availability]
enabled = false  # Not implemented
cluster_nodes = [
    "sentinel-01.company.com",
    "sentinel-02.company.com", 
    "sentinel-03.company.com"
]
leader_election = false  # Conceptual design
data_replication = false  # Conceptual design

# Security settings
[security]
tls_enabled = true
cert_file = "/etc/sentinel-edge/tls/server.crt"
key_file = "/etc/sentinel-edge/tls/server.key"
ca_file = "/etc/sentinel-edge/tls/ca.crt"
client_auth_required = true

# ðŸ“‹ CONCEPTUAL: Integration examples (architectural patterns)
[integrations]
# SIEM integration concepts
splunk_hec_url = "https://splunk.company.com:8088/services/collector"
splunk_token = "${SPLUNK_HEC_TOKEN}"

# Log aggregation concepts
elasticsearch_url = "https://elasticsearch.company.com:9200"
elasticsearch_index = "sentinel-edge-events"
elasticsearch_auth = "${ELASTIC_AUTH}"

# Notification concepts
slack_webhook = "${SLACK_WEBHOOK_URL}"
slack_channel = "#security-alerts"

# Email notification concepts
smtp_server = "smtp.company.com"
smtp_port = 587
smtp_username = "${SMTP_USER}"
smtp_password = "${SMTP_PASS}"
alert_recipients = [
    "security-team@company.com",
    "soc@company.com"
]

# ðŸ“‹ CONCEPTUAL: Enterprise features (architectural concepts)
[enterprise]
organization_id = "your-organization"
deployment_id = "production-cluster"
support_contact = "security-ops@company.com"

# Note: Features marked as "CONCEPTUAL" demonstrate distributed systems 
# architecture knowledge but are not currently implemented. Only core 
# eBPF monitoring and rule-based detection are functional. 